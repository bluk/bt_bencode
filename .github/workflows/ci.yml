name: Rust CI

permissions:
  contents: read

on:
  push:

  pull_request:

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        rust:
          - stable
          - 1.36.0
        exclude:
          - os: macos-latest
            rust: 1.36.0
        include:
          - os: macos-11
            rust: 1.36.0
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Rust Version
        run: rustc --version
      - name: Run cargo build (--all-features)
        run: cargo build --release --all-features
      - name: Run cargo build (--features alloc)
        run: cargo build --release --no-default-features --features alloc
      - name: Run cargo build (--features std)
        run: cargo build --release --no-default-features --features std
  test:
    name: Test
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        rust:
          - stable
          - 1.56.0
        exclude:
          - os: macos-latest
            rust: 1.56.0
        include:
          - os: macos-11
            rust: 1.56.0
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Rust Version
        run: rustc --version
      - name: Run cargo check (--all-features)
        run: cargo check --all-features
      - name: Run cargo test (default)
        run: cargo test
      - name: Run cargo test (--all-features)
        run: cargo test --all-features
      - name: Run cargo test (--features alloc)
        run: cargo test --no-default-features --features alloc
      - name: Run cargo test (--features std)
        run: cargo test --no-default-features --features std
  rustfmt:
    name: Format
    strategy:
      matrix:
        os:
          - ubuntu-latest
        rust:
          - stable
          - nightly
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt
      - name: Rust Version
        run: rustc --version
      - run: cargo fmt --all -- --check
  clippy:
    name: Clippy
    strategy:
      matrix:
        os:
          - ubuntu-latest
        rust:
          - stable
          - nightly
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy
      - name: Run cargo clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
  cargo_deny:
    name: Cargo Deny
    strategy:
      matrix:
        os:
          - ubuntu-latest
        rust:
          - stable
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt
      - name: Rust Version
        run: rustc --version
      - run: cargo install cargo-deny
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - run: cargo generate-lockfile
      - run: cargo deny check
      - run: cargo deny --all-features check
      - run: cargo deny --no-default-features --features alloc check
      - run: cargo deny --no-default-features --features std check